{"version":3,"sources":["components/note-list-item/index.js","components/note-list-item/note-list-item.js","components/note-list/index.js","components/note-list/note-list.js","components/note-add/index.js","components/note-add/note-add.js","components/note-delete/index.js","components/note-delete/note-delete.js","components/app/index.js","components/app/app.js","index.js"],"names":["NoteListItem","id","label","onDelete","onChangeLabel","onChecked","className","type","value","onChange","onClick","NoteList","notes","elements","map","item","idx","e","NoteAdd","state","val","onLabelChange","target","setState","onSubmit","preventDefault","props","onAddItem","this","placeholder","Component","NoteDelete","onDeleteItems","App","maxId","createNoteItem","findIndex","el","slice","oldItem","newValue","newItem","text","newArr","error","checked","filter","ReactDOM","render","document","getElementById"],"mappings":"gTAEeA,ECEM,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UACvD,OACI,uBAAMC,UAAU,eAAhB,UACI,iCAAOL,EAAK,EAAZ,OACA,uBAAOK,UAAU,YAAYC,KAAO,OAAOC,MAASN,EAAOO,SAAUL,IACrE,uBAAOK,SAAYJ,EAAWC,UAAU,eAAeC,KAAK,aAC5D,wBACIG,QAASP,EACTI,KAAK,SACLD,UAAU,4CAHd,SAKI,mBAAGA,UAAU,wBCbdK,G,MCIE,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAOT,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UACzCQ,EAAWD,EAAME,KAAI,SAACC,EAAMC,GAAS,IAChCf,EAAac,EAAbd,GAAIC,EAASa,EAATb,MAEX,OACI,oBAAII,UAAU,kBAAd,SACI,cAAC,EAAD,CACIJ,MAAOA,EACPD,GAAIe,EACJb,SAAY,kBAAMA,EAASF,IAC3BG,cAAiB,SAACa,GAAD,OAAQb,EAAca,EAAGhB,IAC1CI,UAAa,kBAAMA,EAAUJ,OANAA,MAa7C,OACI,oBAAIK,UAAU,6BAAd,SACKO,MCxBEK,G,kNCGXC,MAAQ,CACNC,IAAK,I,EAGPC,cAAgB,SAACJ,GACf,IAAMG,EAAMH,EAAEK,OAAOd,MACrB,EAAKe,SAAS,CACZH,S,EAIJI,SAAW,SAACP,GACVA,EAAEQ,iBACF,EAAKC,MAAMC,UAAU,EAAKR,MAAMC,KAChC,EAAKG,SAAS,CACZH,IAAK,M,4CAIT,WACI,OACI,8BACI,uBAAMd,UAAU,kBACZkB,SAAYI,KAAKJ,SADrB,UAGI,uBAAOf,SAAYmB,KAAKP,cAAed,KAAK,OACpCD,UAAU,4BACVuB,YAAY,oDACZrB,MAASoB,KAAKT,MAAMC,MAC5B,wBAAQV,QAAUkB,KAAKJ,SAAUjB,KAAK,SAC9BD,UAAU,oCADlB,0B,GA/BiBwB,cCDtBC,G,MCCI,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACjB,OAAS,qBAAK1B,UAAU,cAAf,SACT,wBAAQI,QAAWsB,EAAezB,KAAK,SAC3BD,UAAU,oCADtB,wBCHW2B,G,kNCSXC,MAAQ,E,EAERf,MAAQ,CACJP,MAAO,CACH,EAAKuB,eAAe,kCACpB,EAAKA,eAAe,gCACpB,EAAKA,eAAe,oCACpB,EAAKA,eAAe,6BAExBf,IAAK,I,EAWTjB,SAAW,SAACF,GACR,EAAKsB,UAAS,YAAc,IAAZX,EAAW,EAAXA,MACRI,EAAMJ,EAAMwB,WAAU,SAACC,GAAD,OAAQA,EAAGpC,KAAOA,KAE9C,MAAO,CACLW,MAFU,sBAAOA,EAAM0B,MAAM,EAAGtB,IAAtB,YAA+BJ,EAAM0B,MAAMtB,EAAM,U,EAOnEZ,cAAgB,SAACa,EAAGhB,GAChB,EAAKsB,UAAS,YAAc,IAAZX,EAAW,EAAXA,MACNI,EAAMJ,EAAMwB,WAAU,SAACC,GAAD,OAAQA,EAAGpC,KAAOA,KACxCsC,EAAU3B,EAAMI,GAChBwB,EAAWvB,EAAEK,OAAOd,MACpBiC,EAAO,2BAAOF,GAAP,IAAgBrC,MAAOsC,IAEpC,MAAO,CACH5B,MAFQ,sBAAOA,EAAM0B,MAAM,EAAGtB,IAAtB,CAA4ByB,GAA5B,YAAwC7B,EAAM0B,MAAMtB,EAAM,U,EAO9EW,UAAY,SAACe,GACT,IAAMD,EAAU,EAAKN,eAAeO,GACpC,EAAKnB,UAAS,YAAc,IAAZX,EAAW,EAAXA,MACV+B,EAAM,sBAAO/B,GAAP,CAAc6B,IAC1B,MAAqB,KAAlBA,EAAQvC,MACA,CACH0C,OAAO,GAGJ,CACHhC,MAAO+B,O,EAMnBtC,UAAY,SAACJ,GACT,EAAKsB,UAAS,YAAc,IAAZX,EAAW,EAAXA,MACNI,EAAMJ,EAAMwB,WAAU,SAACC,GAAD,OAAQA,EAAGpC,KAAOA,KACxCsC,EAAU3B,EAAMI,GAChByB,EAAO,2BAAOF,GAAP,IAAgBM,SAAUN,EAAQM,UAE/C,MAAO,CACHjC,MAFQ,sBAAOA,EAAM0B,MAAM,EAAGtB,IAAtB,CAA4ByB,GAA5B,YAAwC7B,EAAM0B,MAAMtB,EAAM,U,EAO9EgB,cAAgB,WACZ,EAAKT,UAAS,YAEV,MAAO,CACHX,MAHmB,EAAXA,MACekC,QAAO,SAAA/B,GAAI,OAAqB,IAAjBA,EAAK8B,gB,oDA7DvD,SAAe3C,GACX,MAAO,CACLA,QACA2C,SAAS,EACT5C,GAAI2B,KAAKM,W,oBAgEf,WACI,OACI,qBAAK5B,UAAU,WAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,cAAC,EAAD,CAASqB,UAAaC,KAAKD,YAC3B,cAAC,EAAD,CACIf,MAASgB,KAAKT,MAAMP,MACpBT,SAAYyB,KAAKzB,SACjBC,cAAiBwB,KAAKxB,cACtBC,UAAauB,KAAKvB,YAEtB,cAAC,EAAD,CAAY2B,cAAiBJ,KAAKI,yB,GA7FrBF,cCLjCiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.20e6dc20.chunk.js","sourcesContent":["import NoteListItem from './note-list-item';\r\n\r\nexport default NoteListItem;","import React from 'react'\r\nimport './note-list-item.sass';\r\n\r\n\r\nconst NoteListItem = ({id, label, onDelete, onChangeLabel, onChecked}) => {\r\n    return (\r\n        <form className=\"noteListItem\">\r\n            <span>{id + 1}.</span>\r\n            <input className=\"noteInput\" type = \"text\" value = {label} onChange={onChangeLabel}/>\r\n            <input onChange = {onChecked} className=\"noteCheckBox\" type=\"checkbox\" />\r\n            <button \r\n                onClick={onDelete} \r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n            >\r\n                <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n \r\nexport default NoteListItem;\r\n","import NoteList from './note-list';\r\n\r\nexport default NoteList;","import React from 'react';\r\nimport NoteListItem from '../note-list-item';\r\n\r\nimport './note-list.sass';\r\n\r\n\r\nconst NoteList = ({notes, onDelete, onChangeLabel, onChecked}) => {\r\n    const elements = notes.map((item, idx) => {\r\n        const {id, label} = item;\r\n\r\n        return (\r\n            <li className=\"list-group-item\" key={id}>\r\n                <NoteListItem \r\n                    label={label}\r\n                    id={idx}\r\n                    onDelete = {() => onDelete(id)}\r\n                    onChangeLabel = {(e)  => onChangeLabel(e, id)}\r\n                    onChecked = {() => onChecked(id)}\r\n                />\r\n            </li>   \r\n        )\r\n        \r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group-flush note-list\">\r\n            {elements}\r\n        </ul>\r\n    )        \r\n}\r\n \r\nexport default NoteList;","import NoteAdd from './note-add';\r\n\r\nexport default NoteAdd;","import React, { Component } from 'react';\r\nimport './note-add.sass';\r\n\r\nexport default class NoteAdd extends Component {\r\n\r\n    state = {\r\n      val: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n      const val = e.target.value;\r\n      this.setState({\r\n        val\r\n      })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.onAddItem(this.state.val);\r\n      this.setState({\r\n        val: ''\r\n      })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"todo-add d-flex\"\r\n                    onSubmit = {this.onSubmit}\r\n                >\r\n                    <input onChange = {this.onLabelChange} type=\"text\"\r\n                            className=\"form-control search-input\"\r\n                            placeholder=\"Dont forget something ipmortant, note it here... \" \r\n                            value = {this.state.val} />\r\n                    <button onClick= {this.onSubmit} type=\"button\"\r\n                            className=\"btn btn-outline-secondary btn-add\">Add</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import NoteDelete from './note-delete';\r\n\r\nexport default NoteDelete;","import React from 'react';\r\nimport './note-delete.sass';\r\n\r\nconst NoteDelete = ({onDeleteItems}) => {\r\n    return ( <div className=\"note-delete\">\r\n    <button onClick = {onDeleteItems} type=\"button\"\r\n                className=\"btn btn-outline-danger btn-delete\">Delete</button>\r\n</div> );\r\n}\r\n \r\nexport default NoteDelete;","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport NoteList from '../note-list';\r\nimport NoteAdd from '../note-add';\r\nimport NoteDelete from '../note-delete';\r\n\r\nimport './app.sass';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 1;\r\n\r\n    state = {\r\n        notes: [\r\n            this.createNoteItem('Need to make something special'),\r\n            this.createNoteItem('Make aswesome react note-app'),\r\n            this.createNoteItem('Drink coffee and play some games'),\r\n            this.createNoteItem('Sleep 3 hours and repeat'),\r\n        ],\r\n        val: ''\r\n    };\r\n    \r\n    createNoteItem(label) {\r\n        return {\r\n          label,\r\n          checked: false,\r\n          id: this.maxId++\r\n        }\r\n    };\r\n\r\n    onDelete = (id) => {\r\n        this.setState(({notes}) => {\r\n          const idx = notes.findIndex((el) => el.id === id);\r\n          const newArr = [...notes.slice(0, idx), ...notes.slice(idx + 1)];\r\n          return {\r\n            notes: newArr\r\n          }\r\n        });\r\n    };\r\n\r\n    onChangeLabel = (e, id) => {\r\n        this.setState(({notes}) => {\r\n            const idx = notes.findIndex((el) => el.id === id);\r\n            const oldItem = notes[idx];\r\n            const newValue = e.target.value;\r\n            const newItem = {...oldItem, label: newValue};\r\n            const newArr = [...notes.slice(0, idx), newItem, ...notes.slice(idx + 1)]\r\n            return {\r\n                notes: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n    onAddItem = (text) => {\r\n        const newItem = this.createNoteItem(text)\r\n        this.setState(({notes}) => {\r\n        const newArr = [...notes, newItem];\r\n        if(newItem.label === '') {\r\n            return {\r\n                error: true\r\n            }\r\n        } else {\r\n            return {\r\n                notes: newArr\r\n            }\r\n        }\r\n        });\r\n    };\r\n\r\n    onChecked = (id) => {\r\n        this.setState(({notes}) => {\r\n            const idx = notes.findIndex((el) => el.id === id);\r\n            const oldItem = notes[idx];\r\n            const newItem = {...oldItem, checked: !oldItem.checked};\r\n            const newArr = [...notes.slice(0, idx), newItem, ...notes.slice(idx + 1)]\r\n            return {\r\n                notes: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n    onDeleteItems = () => {\r\n        this.setState(({notes}) => { \r\n            const checkedItems = notes.filter(item => item.checked === false);\r\n            return {\r\n                notes: checkedItems\r\n            }\r\n        });\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"note-app\">\r\n                <div className=\"container note-container\">\r\n                    <NoteAdd onAddItem = {this.onAddItem}/>\r\n                    <NoteList \r\n                        notes = {this.state.notes}\r\n                        onDelete = {this.onDelete}\r\n                        onChangeLabel = {this.onChangeLabel}\r\n                        onChecked = {this.onChecked}\r\n                    />\r\n                    <NoteDelete onDeleteItems = {this.onDeleteItems}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}